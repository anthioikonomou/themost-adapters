{"version":3,"sources":["index.es6"],"names":["createInstance","util","_","async","HASH_CODE_LENGTH","getConfigurationMethod","Symbol","pools","randomInt","min","max","Math","floor","random","randomString","length","chars","str","i","substr","randomHex","buffer","Buffer","toString","log","data","stack","debug","process","env","NODE_ENV","PoolDictionary","_length","Object","defineProperty","get","set","value","configurable","enumerable","key","hasOwnProperty","self","keys","forEach","x","DataPool","options","_extend","size","reserved","timeout","lifetime","available","inUse","listeners","state","adapter_","adapter","TypeError","configuration","isNil","dataConfiguration","getStrategy","DataConfigurationStrategy","getAdapterType","adapters","find","name","invariantName","callback","eachSeries","cb","item","close","err","e","newObj","nowTime","Date","getTime","hashCode","obj","createdAt","createObject","res","Error","setTimeout","er","code","push","releasedObj","clearTimeout","pooledObj","inUseKeys","format","newObject","result","queryLifetimeForObject","waitForObject","listener","shift","call","used","PoolAdapter","pool","getConfigurationFunc","base","open","getObject","lastIdentity","releaseObject","query","values","execute","batch","entity","attribute","selectIdentity","createView","fn","executeInTransaction","migrate","on","cleanup"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\nimport util from 'util';\nimport {_} from 'lodash';\nimport async from 'async';\n\nconst HASH_CODE_LENGTH = 24;\nconst getConfigurationMethod = Symbol('getConfiguration');\n\nconst pools = Symbol('pools');\n/**\n * @function\n * @param min\n * @param max\n * @returns {*}\n */\nfunction randomInt(min, max) {\n    return Math.floor(Math.random()*max) + min;\n}\n\nfunction randomString(length) {\n\n    length = length || 16;\n    const chars = \"abcdefghkmnopqursuvwxz2456789ABCDEFHJKLMNPQURSTUVWXYZ\";\n    let str = \"\";\n    for(let i = 0; i < length; i++) {\n        str += chars.substr(randomInt(0, chars.length-1),1);\n    }\n    return str;\n}\n\nfunction randomHex(length) {\n\n    const buffer = new Buffer(randomString(length));\n    return buffer.toString('hex');\n}\n\nfunction log(data) {\n    util.log(data);\n    if (data.stack) {\n        util.log(data.stack);\n    }\n}\n\nfunction debug(data) {\n    if (process.env.NODE_ENV==='development')\n        log(data);\n}\n\n/**\n * @class PoolDictionary\n * @constructor\n */\nclass PoolDictionary {\n    constructor() {\n        let _length = 0;\n        Object.defineProperty(this, 'length', {\n            get: function() {\n                return _length;\n            },\n            set: function(value) {\n                _length = value;\n            }, configurable:false, enumerable:false\n        });\n    }\n\n    exists(key) {\n        return this.hasOwnProperty(key);\n    }\n\n    push(key, value) {\n        if (this.hasOwnProperty(key)) {\n            this[key] = value;\n        }\n        else {\n            this[key] = value;\n            this.length += 1;\n        }\n    }\n\n    pop(key) {\n        if (this.hasOwnProperty(key)) {\n            delete this[key];\n            this.length -= 1;\n            return 1;\n        }\n        return 0;\n    }\n\n    clear() {\n        const self = this, keys = _.keys(this);\n        _.forEach(keys, function(x) {\n            if (self.hasOwnProperty(x)) {\n                delete self[x];\n                self.length -= 1;\n            }\n        });\n        this.length = 0;\n    }\n\n    unshift() {\n        for(const key in this) {\n            if (this.hasOwnProperty(key)) {\n                const value = this[key];\n                delete this[key];\n                this.length -= 1;\n                return value;\n            }\n        }\n    }\n}\n\n/**\n * @class\n * @property {*} options\n */\nexport class DataPool {\n    /**\n     * @constructor\n     * @param {*=} options\n     */\n    constructor(options) {\n        this.options = util._extend({ size:20, reserved:2, timeout:30000, lifetime:1200000 }, options);\n        /**\n         * A collection of objects which represents the available pooled data adapters.\n         */\n        this.available = new PoolDictionary();\n        /**\n         * A collection of objects which represents the pooled data adapters that are currently in use.\n         */\n        this.inUse = new PoolDictionary();\n        /**\n         * An array of listeners that are currently waiting for a pooled data adapter.\n         * @type {Function[]}\n         */\n        this.listeners = [ ];\n        //set default state to active\n        this.state = 'active';\n\n    }\n\n    createObject() {\n        //if local adapter module has been already loaded\n        if (typeof this.adapter_ !== 'undefined') {\n            //create adapter instance and return\n            return this.adapter_.createInstance(this.options.adapter.options);\n        }\n\n        this.options = this.options || {};\n        if (typeof this[getConfigurationMethod] !== 'function') {\n            throw new TypeError('Configuration getter must be a function.');\n        }\n        /**\n         * @type {ConfigurationBase}\n         */\n        let configuration = this[getConfigurationMethod]();\n        if (_.isNil(configuration)) {\n            throw new TypeError('Configuration cannot be empty at this context.');\n        }\n        let dataConfiguration = configuration.getStrategy(function DataConfigurationStrategy() {\n            //\n        });\n        if (_.isNil(dataConfiguration)) {\n            throw new TypeError('Data configuration cannot be empty at this context.');\n        }\n        if (typeof dataConfiguration.getAdapterType !== 'function') {\n            throw new TypeError('Data configuration adapter getter must be a function.');\n        }\n        let adapter = dataConfiguration.adapters.find((x)=> {\n           return x.name === this.options.adapter;\n        });\n        if (_.isNil(adapter)) {\n            throw new TypeError('Child data adapter cannot be found.');\n        }\n        this.adapter_ = dataConfiguration.getAdapterType(adapter.invariantName);\n        //get child adapter\n        return this.adapter_.createInstance(adapter.options);\n    }\n\n    cleanup(callback) {\n        try {\n            const self = this;\n            self.state = 'paused';\n            const keys = _.keys(self.available);\n            async.eachSeries(keys, function(key,cb) {\n                const item = self.available[key];\n               if (typeof item === 'undefined' || item === null) { return cb(); }\n                if (typeof item.close === 'function') {\n                    item.close(function() {\n                        cb();\n                    });\n                }\n            }, function(err) {\n                callback(err);\n                //clear available collection\n                _.forEach(keys, function(key) {\n                    delete self.available[key];\n                });\n                self.state = 'active';\n            });\n        }\n        catch(e) {\n            callback(e);\n        }\n    }\n\n    /**\n     * Queries data adapter lifetime in order to release an object which exceeded the defined lifetime limit.\n     * If such an object exists, releases data adapter and creates a new one.\n     * @private\n     * @param {Function} callback\n     */\n    queryLifetimeForObject(callback) {\n        const self = this;\n        const keys = _.keys(self.inUse);\n        let newObj;\n        if (keys.length===0) { return callback(); }\n        if (self.options.lifetime>0) {\n            const nowTime = (new Date()).getTime();\n            async.eachSeries(keys, function(hashCode,cb) {\n                const obj = self.inUse[hashCode];\n                if (typeof obj === 'undefined' || obj === null) {\n                    return cb();\n                }\n                if (nowTime>(obj.createdAt.getTime()+self.options.lifetime)) {\n                    if (typeof obj.close !== 'function') {\n                        return cb();\n                    }\n                    //close data adapter (the client which is using this adapter may get an error for this, but this data adapter has been truly timed out)\n                    obj.close(function() {\n                        //create new object (data adapter)\n                        newObj = self.createObject();\n                        //add createdAt property\n                        newObj.createdAt = new Date();\n                        //add object hash code property\n                        newObj.hashCode = randomHex(HASH_CODE_LENGTH);\n                        //delete inUse object\n                        delete self.inUse[hashCode];\n                        //push object in inUse collection\n                        self.inUse[newObj.hashCode] = newObj;\n                        //return new object\n                        return cb(newObj);\n                    });\n                }\n                else {\n                    cb();\n                }\n            }, function(res) {\n                if (res instanceof Error) {\n                    callback(res);\n                }\n                else {\n                    callback(null, res);\n                }\n            });\n        }\n        else {\n            callback();\n        }\n    }\n\n    /**\n     * @private\n     * @param {Function} callback\n     */\n    waitForObject(callback) {\n        const self = this;\n        let timeout;\n        let newObj;\n        //register a connection pool timeout\n        timeout = setTimeout(function() {\n            //throw timeout exception\n            const er = new Error('Connection pool timeout.');\n            er.code = 'EPTIMEOUT';\n            callback(er);\n        }, self.options.timeout);\n        self.listeners.push(function(releasedObj) {\n            //clear timeout\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n            if (releasedObj) {\n                //push (update) released object in inUse collection\n                releasedObj.createdAt = new Date();\n                self.inUse[releasedObj.hashCode] = releasedObj;\n                //return new object\n                return callback(null, releasedObj);\n            }\n            const keys = _.keys(self.available);\n            if (keys.length>0) {\n                const key = keys[0];\n                //get connection from available connections\n                const pooledObj = self.available[key];\n                delete self.available[key];\n                //push object in inUse collection\n                self.inUse[pooledObj.hashCode] = pooledObj;\n                //return pooled object\n                callback(null, pooledObj);\n            }\n            else {\n                //create new object\n                newObj = self.createObject();\n                //add createdAt property\n                newObj.createdAt = new Date();\n                //add object hash code\n                newObj.hashCode = randomHex(HASH_CODE_LENGTH);\n                //push object in inUse collection\n                self.inUse[newObj.hashCode] = newObj;\n                //return new object\n                callback(null, newObj);\n            }\n        });\n    }\n\n    /**\n     * @private\n     * @param {Function} callback\n     */\n    newObject(callback) {\n        const self = this;\n        let newObj;\n        for(const key in self.available) {\n            if (self.available.hasOwnProperty(key)) {\n                //get available object\n                newObj = self.available[key];\n                //delete available key from collection\n                delete self.available[key];\n                //add createdAt property\n                newObj.createdAt = new Date();\n                //push object in inUse collection\n                self.inUse[newObj.hashCode] = newObj;\n                //and finally return it\n                return callback(null, newObj);\n            }\n        }\n        //otherwise create new object\n        newObj = self.createObject();\n        //add createdAt property\n        newObj.createdAt = new Date();\n        //add object hash code\n        newObj.hashCode = randomHex(HASH_CODE_LENGTH);\n        //push object in inUse collection\n        self.inUse[newObj.hashCode] = newObj;\n        //return new object\n        return callback(null, newObj);\n    }\n\n    /**\n     *\n     * @param {Function} callback\n     */\n    getObject(callback) {\n        const self = this;\n        callback = callback || function() {};\n\n        if (self.state !== 'active') {\n            const er = new Error('Connection refused due to pool state.');\n            er.code = 'EPSTATE';\n            return callback(er);\n        }\n        const inUseKeys = _.keys(self.inUse);\n        debug(util.format(\"INFO (DataPool): Connections in use:%s\", inUseKeys.length));\n        if ((inUseKeys.length < self.options.size) || (self.options.size === 0)) {\n            debug(\"INFO  (DataPool): Creating new object in data pool.\");\n            self.newObject(function(err, result) {\n                if (err) { return callback(err); }\n                return callback(null, result);\n            });\n        }\n        else {\n            self.queryLifetimeForObject(function(err, result) {\n                if (err) { return callback(err); }\n                if (result) { return callback(null, result); }\n                debug(\"INFO (DataPool): Waiting for an object from data pool.\");\n                self.waitForObject(function(err, result) {\n                    if (err) { return callback(err); }\n                    callback(null, result);\n                });\n            });\n        }\n    }\n\n    /**\n     *\n     * @param {*} obj\n     * @param {Function} callback\n     */\n    releaseObject(obj, callback) {\n        const self = this;\n        callback = callback || function() {};\n        if (typeof obj === 'undefined' || obj === null) {\n            return callback();\n        }\n        try {\n            //get the first listener\n            const listener = self.listeners.shift();\n            //if listener exists\n            if (typeof listener === 'function') {\n                //execute listener\n                if (typeof obj.hashCode === 'undefined' || obj.hashCode === null) {\n                    //generate hashCode\n                    obj.hashCode = randomHex(HASH_CODE_LENGTH);\n                }\n                if (self.inUse.hasOwnProperty(obj.hashCode)) {\n                    //call listener with the released object as parameter\n                    listener.call(self, obj);\n                }\n                else {\n                    //validate released object\n                    if (typeof obj.close === 'function') {\n                        try {\n                            //call close() method\n                            obj.close();\n                            //call listener without any parameter\n                            listener.call(self);\n                        }\n                        catch(e) {\n                            log('An error occured while trying to release an unknown data adapter');\n                            log(e);\n                            //call listener without any parameter\n                            listener.call(self);\n                        }\n                    }\n                }\n            }\n            else {\n                //search inUse collection\n                debug(\"INFO (DataPool): Releasing object from data pool.\");\n                const used = this.inUse[obj.hashCode];\n                if (typeof used !== 'undefined') {\n                    //delete used adapter\n                    delete this.inUse[obj.hashCode];\n                    //push data adapter to available collection\n                    self.available[used.hashCode] = used;\n                    debug(util.format(\"INFO (DataPool): Object released. Connections in use %s.\", this.inUse.length));\n                }\n            }\n            //finally exit\n            callback();\n        }\n        catch(e) {\n            callback(e);\n        }\n    }\n}\n\n/**\n * @class\n */\nexport class PoolAdapter {\n    /**\n     * @constructor\n     * @augments DataAdapter\n     * @property {DataAdapter} base\n     * @property {DataPool} pool\n     */\n    constructor(options) {\n        this.options = options;\n        const self = this;\n        Object.defineProperty(this, 'pool', {\n            get: function() {\n                return DataPool[pools][self.options.pool];\n            }, configurable:false, enumerable:false\n        });\n    }\n\n    /**\n     * @param {Function} getConfigurationFunc\n     */\n    hasConfiguration(getConfigurationFunc) {\n        this.pool[getConfigurationMethod] = getConfigurationFunc;\n    }\n\n    /**\n     * @private\n     * @param callback\n     */\n    open(callback) {\n        const self = this;\n        if (self.base) {\n            return self.base.open(callback);\n        }\n        else {\n            self.pool.getObject(function(err, result) {\n                if (err) { return callback(err); }\n                self.base = result;\n                if (typeof self.base.lastIdentity === 'function') {\n                    self.lastIdentity = function(callback) {\n                        return this.base.lastIdentity(callback);\n                    };\n                }\n                self.base.open(callback);\n            });\n        }\n    }\n\n    /**\n     * Closes the underlying database connection\n     * @param callback {function(Error=)}\n     */\n    close(callback) {\n        callback = callback || function() {};\n        const self = this;\n        if (self.base) {\n            self.pool.releaseObject(self.base,callback);\n            if (typeof self.base.lastIdentity === 'function') {\n                delete self.lastIdentity;\n            }\n            delete self.base;\n        }\n        else {\n            callback();\n        }\n    }\n\n    /**\n     * Executes a query and returns the result as an array of objects.\n     * @param query {string|*}\n     * @param values {*}\n     * @param callback {Function}\n     */\n    execute(query, values, callback) {\n        const self = this;\n        self.open(function(err) {\n            if (err) { return callback(err); }\n            self.base.execute(query, values, callback);\n        });\n    }\n\n    /**\n     * Executes an operation against database and returns the results.\n     * @param batch {*}\n     * @param callback {Function=}\n     */\n    executeBatch(batch, callback) {\n        callback(new Error('This method is obsolete. Use DataAdapter.executeInTransaction() instead.'));\n    }\n\n    /**\n     * Produces a new identity value for the given entity and attribute.\n     * @param entity {String} The target entity name\n     * @param attribute {String} The target attribute\n     * @param callback {Function=}\n     */\n    selectIdentity(entity, attribute, callback) {\n        const self = this;\n        self.open(function(err) {\n            if (err) { return callback(err); }\n            if (typeof self.base.selectIdentity !== 'function') {\n                return callback(new Error('This method is not yet implemented. The base DataAdapter object does not implement this method..'));\n            }\n            self.base.selectIdentity(entity, attribute , callback);\n        });\n    }\n\n    /**\n     * Creates a database view if the current data adapter supports views\n     * @param {string} name A string that represents the name of the view to be created\n     * @param {QueryExpression} query The query expression that represents the database vew\n     * @param {Function} callback A callback function to be called when operation will be completed.\n     */\n    createView(name, query, callback) {\n        const self = this;\n        self.open(function(err) {\n            if (err) { return callback(err); }\n            self.base.createView(name, query, callback);\n        });\n    }\n\n    /**\n     * Begins a transactional operation by executing the given function\n     * @param fn {Function} The function to execute\n     * @param callback {Function} The callback that contains the error -if any- and the results of the given operation\n     */\n    executeInTransaction(fn, callback) {\n        const self = this;\n        self.open(function(err) {\n            if (err) { return callback(err); }\n            self.base.executeInTransaction(fn, callback);\n        });\n    }\n\n    /**\n     *\n     * @param obj {DataModelMigration|*} An Object that represents the data model scheme we want to migrate\n     * @param callback {Function}\n     */\n    migrate(obj, callback) {\n        const self = this;\n        self.open(function(err) {\n            if (err) { return callback(err); }\n            self.base.migrate(obj, callback);\n        });\n    }\n}\n/**\n * @param {*} options\n */\nexport function createInstance(options) {\n    let name, er;\n    if (typeof options.adapter === 'undefined' || options.adapter === null) {\n        er = new Error('Invalid argument. The target data adapter is missing.');\n        er.code = 'EARG';\n        throw er;\n    }\n    //init pool collection\n    DataPool[pools] = DataPool[pools] || {};\n\n    //get adapter's name\n    if (typeof options.adapter === 'string') {\n        name = options.adapter;\n    }\n    else if (typeof options.adapter.name === 'string') {\n        name = options.adapter.name;\n    }\n    //validate name\n    if (typeof name === 'undefined') {\n        er = new Error('Invalid argument. The target data adapter name is missing.');\n        er.code = 'EARG';\n        throw er;\n    }\n    /**\n     * @type {DataPool}\n     */\n    let pool = DataPool[pools][name];\n    if (typeof pool === 'undefined' || pool === null) {\n        //create new pool with the name specified in options\n        DataPool[pools][name] = new DataPool(options);\n    }\n    return new PoolAdapter({ pool:name });\n}\n\nprocess.on('exit', function() {\n    if (_.isNil(DataPool[pools])) { return; }\n    try {\n        const keys = _.keys(DataPool[pools]);\n        _.forEach(keys, function(x) {\n            try {\n                log(util.format('Cleaning up data pool (%s)', x));\n                if (typeof DataPool[pools][x] === 'undefined' || DataPool[pools][x] === null) { return; }\n                if (typeof DataPool[pools][x].cleanup === 'function') {\n                    DataPool[pools][x].cleanup(function() {\n                        //do nothing\n                    });\n                }\n            }\n            catch(err) {\n                debug(err);\n            }\n        });\n    }\n    catch(err) {\n        debug(err);\n    }\n\n});\n"]}